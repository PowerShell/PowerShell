name: pipelines_templates_insert_nuget_config_azfeed
inputs:
  repoRoot:
    required: false
    default: "$(REPOROOT)"
  ob_restore_phase:
    required: false
    default: true
    type: boolean
runs:
  using: composite
  steps:
  - name: Install Azure Artifacts Credential Provider
    uses: actions/setup-dotnet@v4.0.0
    env:
      NUGET_AUTH_TOKEN: "${{ secrets.NUGET_AUTH_TOKEN }}"
      NUGET_FEED_URL: "${{ env.NUGET_FEED_URL }}"
    with:
      source-url: "${{ env.NUGET_FEED_URL }}"
  - name: Switch to production Azure DevOps feed for all nuget.configs
    if: "(success() || failure()) && env.UseAzDevOpsFeed != ''"
    env:
      NUGETCONFIGDIR: "${{ inputs.repoRoot }}/src/Modules"
      OB_RESTORE_PHASE: "${{ inputs.ob_restore_phase }}"
    run: |-
      try {
        $configPath = "${env:NugetConfigDir}/nuget.config"
        Import-Module ${{ inputs.repoRoot }}/build.psm1 -Force

        Write-Verbose -Verbose "Running: Switch-PSNugetConfig -Source Private -UserName '${{ env.AzDevopsFeedUserNameKVPAT }}' -ClearTextPAT '${{ env.powershellPackageReadPat }}'"
        Switch-PSNugetConfig -Source Private -UserName '${{ env.AzDevopsFeedUserNameKVPAT }}' -ClearTextPAT '${{ env.powershellPackageReadPat }}'

        if(-not (Test-Path $configPath))
        {
            throw "nuget.config is not created"
        }
      }
      catch {
        Get-Error
        throw
      }
    shell: pwsh
  - name: Capture all nuget.config files
    if: "(success() || failure()) && env.UseAzDevOpsFeed != ''"
    env:
      OB_RESTORE_PHASE: "${{ inputs.ob_restore_phase }}"
    run: |-
      Get-ChildItem ${{ inputs.repoRoot }}/nuget.config -Recurse | Foreach-Object {
        Write-Verbose -Verbose "--- START $($_.fullname) ---"
        get-content $_.fullname  | Out-String -width 9999 -Stream | write-Verbose -Verbose
        Write-Verbose -Verbose "--- END $($_.fullname) ---"
      }
    shell: pwsh
  - name: Capture VSS* Environment
    if: "(success() || failure()) && env.UseAzDevOpsFeed != ''"
    env:
      OB_RESTORE_PHASE: "${{ inputs.ob_restore_phase }}"
    run: Get-ChildItem -Path env:VSS* | Out-String -width 9999 -Stream | write-Verbose -Verbose
    shell: pwsh