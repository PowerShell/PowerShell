name: windows_test
description: 'Test PowerShell on Windows'

inputs:
  purpose:
    required: false
    default: ''
    type: string
  tagSet:
    required: false
    default: CI
    type: string

runs:
  using: composite
  steps:
  - name: Capture Environment
    if: success() || failure()
    run: 'Get-ChildItem -Path env: | Out-String -width 9999 -Stream | write-Verbose -Verbose'
    shell: pwsh
  - name: Download Build Artifacts
    uses: actions/download-artifact@v4
    with:
      path: "${{ github.workspace }}"
  - name: Capture Artifacts Directory
    continue-on-error: true
    run: Get-ChildItem "${{ github.workspace }}\build\*" -Recurse
    shell: pwsh
  - name: Bootstrap
    run: |-
      # Remove "Program Files\dotnet" from the env variable PATH, so old SDKs won't affect us.
      Write-Host "Old Path:"
      Write-Host $env:Path
      $dotnetPath = Join-Path $env:SystemDrive 'Program Files\dotnet'
      $paths = $env:Path -split ";" | Where-Object { -not $_.StartsWith($dotnetPath) }
      $env:Path = $paths -join ";"
      Write-Host "New Path:"
      Write-Host $env:Path
      # Bootstrap
      Import-Module .\tools\ci.psm1
      Invoke-CIInstall
    shell: powershell
  - name: Test
    if: success()
    run: |-
      Import-Module .\build.psm1 -force
      Start-PSBootstrap
      Import-Module .\tools\ci.psm1
      Restore-PSOptions -PSOptionsPath '${{ github.workspace }}\build\psoptions.json'
      $options = (Get-PSOptions)
      $path = split-path -path $options.Output
      $rootPath = split-Path -path $path
      Expand-Archive -Path '${{ github.workspace }}\build\build.zip' -DestinationPath $rootPath -Force
      Invoke-CITest -Purpose '${{ inputs.purpose }}' -TagSet '${{ inputs.tagSet }}' -OutputFormat JUnitXml
    shell: pwsh
  - name: Convert JUnit to CTRF
    run: |-
      Get-ChildItem -Path "${{ github.workspace }}/testResults/*.xml" -Recurse | ForEach-Object {
        npx --yes junit-to-ctrf $_.FullName --output .crtf/$($_.BaseName).json --tool Pester --env 'Windows ${{ inputs.purpose }} ${{ inputs.tagSet }}'
      }
    shell: powershell
  - name: Publish Test Report
    uses: ctrf-io/github-test-reporter@v1
    with:
      report-path: './ctrf/*.json'
    if: always()
  - name: Upload testResults artifact
    if: always()
    uses: actions/upload-artifact@v4
    with:
      name: testResults-pester-${{ inputs.purpose }}-${{ inputs.tagSet }}
      path: ${{ runner.workspace }}/testResults
  - name: Upload ctrf artifact
    if: always()
    uses: actions/upload-artifact@v4
    with:
      name: ctrf-pester-${{ inputs.purpose }}-${{ inputs.tagSet }}
      path: .crtf
