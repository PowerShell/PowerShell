name: 'Install Azure DevOps Universal Package'
description: 'Downloads and extracts a Universal Package from Azure DevOps Artifacts feed'

inputs:
  feed:
    description: 'Azure DevOps Artifacts feed name'
    required: true
  package:
    description: 'Package name to download'
    required: true
  version:
    description: 'Package version to download'
    required: true
  organization:
    description: 'Azure DevOps organization URL'
    required: true
    default: 'https://dev.azure.com/powershell/'
  project:
    description: 'Azure DevOps project ID'
    required: true
  scope:
    description: 'Package scope (project or organization)'
    required: false
    default: 'project'
  destination:
    description: 'Destination path for package download'
    required: false
    default: '${{ github.workspace }}\packages'
  packageFileName:
    description: 'Expected package file name pattern (supports variable substitution with {version})'
    required: false
    default: ''
  extractSubFolder:
    description: 'Subfolder name to create for extraction'
    required: false
    default: ''
  environmentVariable:
    description: 'Environment variable name to set with extraction path'
    required: false
    default: ''

outputs:
  packagePath:
    description: 'Path where the package was downloaded'
    value: ${{ steps.download.outputs.packagePath }}
  extractionPath:
    description: 'Path where the package was extracted'
    value: ${{ steps.download.outputs.extractionPath }}

runs:
  using: composite
  steps:
    - name: Download and Extract Azure DevOps Universal Package
      id: download
      shell: pwsh
      env:
        AZURE_DEVOPS_EXT_PAT: ${{ env.AZURE_DEVOPS_EXT_PAT }}
      run: |
        $feed = "${{ inputs.feed }}"
        $package = "${{ inputs.package }}"
        $version = "${{ inputs.version }}"
        $org = "${{ inputs.organization }}"
        $project = "${{ inputs.project }}"
        $scope = "${{ inputs.scope }}"
        $destination = "${{ inputs.destination }}"
        $packageFileName = "${{ inputs.packageFileName }}"
        $extractSubFolder = "${{ inputs.extractSubFolder }}"
        $environmentVariable = "${{ inputs.environmentVariable }}"

        Import-Module ./build.psm1
        Switch-PSNugetConfig -Source Public

        Write-Host "Installing Azure DevOps CLI..."
        dotnet tool install --global Azure.DevOps.CLI

        Write-Host "Configuring Azure DevOps defaults..."
        az devops configure --defaults organization=$org project=$project

        Write-Host "Downloading package: $package version $version from feed: $feed"
        az artifacts universal download --feed $feed --name $package --version $version --path $destination --scope $scope

        Write-Host "Downloaded $package version $version to $destination"

        # Set output for package path
        echo "packagePath=$destination" >> $env:GITHUB_OUTPUT

        # Handle package extraction if packageFileName is provided
        if ($packageFileName) {
            # Replace {version} placeholder with actual version
            $actualPackageFileName = $packageFileName -replace '\{version\}', $version
            $packagePath = Join-Path $destination $actualPackageFileName

            Write-Host "Looking for package file: $actualPackageFileName"

            if (-not (Test-Path -Path $packagePath)) {
                throw "Package $actualPackageFileName not found in $destination"
            }

            # Determine extraction path
            if ($extractSubFolder) {
                $extractPath = Join-Path $destination $extractSubFolder
            } else {
                $extractPath = $destination
            }

            # Create extraction directory if it doesn't exist
            if (-not (Test-Path -Path $extractPath)) {
                New-Item -Path $extractPath -ItemType Directory | Out-Null
            }

            if ($packageFileName -like "*.tar.gz") {
                Write-Host "Extracting tar.gz package $packagePath to $extractPath"
                tar -xvzf $packagePath -C $extractPath
                Write-Host "Extracted package to $extractPath"
            }
            else {
              Write-Host "Extracting package $packagePath to $extractPath"
              Expand-Archive -Path $packagePath -DestinationPath $extractPath -Force
              Write-Host "Extracted package to $extractPath"
            }

            # Set output for extraction path
            echo "extractionPath=$extractPath" >> $env:GITHUB_OUTPUT

            # Set environment variable if specified
            if ($environmentVariable) {
                Write-Host "Setting environment variable $environmentVariable to $extractPath"
                echo "$environmentVariable=$extractPath" | Out-File -FilePath $env:GITHUB_ENV -Append
            }
        } else {
            echo "extractionPath=$destination" >> $env:GITHUB_OUTPUT
        }

        Write-Host "Azure DevOps Universal Package installation completed successfully"
