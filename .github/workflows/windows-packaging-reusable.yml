name: Windows Packaging (Reusable)

on:
  workflow_call:

env:
  GIT_CONFIG_PARAMETERS: "'core.autocrlf=false'"
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  POWERSHELL_TELEMETRY_OPTOUT: 1
  DOTNET_NOLOGO: 1
  __SuppressAnsiEscapeSequences: 1
  nugetMultiFeedWarnLevel: none
  SYSTEM_ARTIFACTSDIRECTORY: ${{ github.workspace }}/artifacts
  BUILD_ARTIFACTSTAGINGDIRECTORY: ${{ github.workspace }}/artifacts

jobs:
  package:
    name: ${{ matrix.architecture }} - ${{ matrix.channel }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - architecture: x64
            channel: preview
            runtimePrefix: win7
          - architecture: x86
            channel: stable
            runtimePrefix: win7
          - architecture: x86
            channel: preview
            runtimePrefix: win7
          - architecture: arm64
            channel: preview
            runtimePrefix: win

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 1000

      - name: Capture Environment
        if: success() || failure()
        run: |
          Get-ChildItem -Path env: | Out-String -width 9999 -Stream | write-Verbose -Verbose
        shell: pwsh

      - name: Capture PowerShell Version Table
        if: success() || failure()
        run: |
          $PSVersionTable
        shell: pwsh

      - name: Switch to Public Feeds
        if: success()
        run: |
          Import-Module .\tools\ci.psm1
          Switch-PSNugetConfig -Source Public
        shell: pwsh

      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          global-json-file: ./global.json

      - name: Bootstrap
        if: success()
        run: |
          Import-Module .\tools\ci.psm1
          Invoke-CIInstall -SkipUser
        shell: pwsh

      - name: Install Attack Surface Analyzer
        run: |
          Write-Host "Installing Attack Surface Analyzer..."
          dotnet tool install -g Microsoft.CST.AttackSurfaceAnalyzer.CLI --version 2.3.328
        shell: pwsh

      - name: Take Baseline Snapshot
        run: |
          Write-Host "Taking baseline snapshot with Attack Surface Analyzer..."
          # Use specific collectors for faster execution:
          # -f: File system collector (PowerShell install dirs and System32\PowerShell)
          # -s: Service collector
          # -r: Registry collector
          # -u: User and group account collector
          # -p: Network port collector
          # -l: Log collector (EventLog)
          # Exclude slow collectors like WiFi, TPM, Cryptographic Keys, Firewall, COM, Certificates
          $windowsPowerShellPath = [System.Environment]::GetFolderPath([System.Environment+SpecialFolder]::Windows) + "\System32\PowerShell"
          & "$env:USERPROFILE\.dotnet\tools\asa.exe" collect -f -s -r -u -p -l --directories "C:\Program Files\PowerShell,C:\Program Files (x86)\PowerShell,$windowsPowerShellPath"
        shell: pwsh

      - name: Build and Package
        run: |
          Import-Module .\tools\ci.psm1
          New-CodeCoverageAndTestPackage
          Invoke-CIFinish -Runtime ${{ matrix.runtimePrefix }}-${{ matrix.architecture }} -channel ${{ matrix.channel }}
        shell: pwsh

      - name: Analyze with Attack Surface Analyzer
        run: |
          Write-Host "Taking post-installation snapshot..."
          $windowsPowerShellPath = [System.Environment]::GetFolderPath([System.Environment+SpecialFolder]::Windows) + "\System32\PowerShell"
          & "$env:USERPROFILE\.dotnet\tools\asa.exe" collect -f -s -r -u -p -l --directories "C:\Program Files\PowerShell,C:\Program Files (x86)\PowerShell,$windowsPowerShellPath"

          Write-Host "Exporting comparison results..."
          & "$env:USERPROFILE\.dotnet\tools\asa.exe" export-collect

          Write-Host "Attack Surface Analyzer test completed."
        shell: pwsh

      - name: Upload Attack Surface Analyzer Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: attack-surface-analyzer-results-${{ matrix.architecture }}-${{ matrix.channel }}
          path: |
            ${{ github.workspace }}/*_summary.json.txt
            ${{ github.workspace }}/*_results.json.txt
            ${{ github.workspace }}/asa.sqlite

      - name: Upload Build Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: windows-packaging-${{ matrix.architecture }}-${{ matrix.channel }}
          path: |
            ${{ github.workspace }}/artifacts/**/*
            !${{ github.workspace }}/artifacts/**/*.pdb
