jobs:
- job: GithubReleaseDraft
  displayName: Create GitHub Release Draft
  condition: succeeded()
  pool:
    type: release
    os: windows
  templateContext:
    inputs:
      - input: pipelineArtifact
        artifactName: drop_setReleaseTagAndUploadTools_SetTagAndTools
      - input: pipelineArtifact
        pipeline: PSPackagesOfficial
        artifactName: drop_upload_upload_packages
  variables:
    - template: ./variable/release-shared.yml@self
      parameters:
        RELEASETAG: $[ stageDependencies.setReleaseTagAndUploadTools.SetTagAndTools.outputs['OutputReleaseTag.releaseTag'] ]

  steps:
  - task: PowerShell@2
    inputs:
      targetType: inline
      script: |
        Write-Verbose -Verbose "Release Tag: $(ReleaseTag)"
        Get-ChildItem Env: | Out-String -Stream | Write-Verbose -Verbose
    displayName: 'Capture Environment Variables'

  - template: release-install-pwsh.yml

  - task: PowerShell@2
    inputs:
      targetType: inline
      pwsh: true
      script: |
        $Path = "$(Pipeline.Workspace)/GitHubPackages"
        $OutputPath = Join-Path $Path 'hashes.sha256'
        $packages  = Get-ChildItem -Path $Path -Include * -Recurse -File
        $checksums = $packages |
            ForEach-Object {
                Write-Verbose -Verbose "Generating checksum file for $($_.FullName)"
                $packageName = $_.Name
                $hash = (Get-FileHash -Path $_.FullName -Algorithm SHA256).Hash.ToLower()
                # the '*' before the packagename signifies it is a binary
                "$hash *$packageName"
            }
        $checksums | Out-File -FilePath $OutputPath -Force
        $fileContent = Get-Content -Path $OutputPath -Raw | Out-String
        Write-Verbose -Verbose -Message $fileContent
    displayName: Add sha256 hashes
  
  - task: PowerShell@2
    inputs:
      targetType: inline
      pwsh: true
      script: |
        Get-ChildItem $(Pipeline.Workspace) -recurse | Select-Object -ExpandProperty FullName
    displayName: List all files in the workspace

  - task: PowerShell@2
    inputs:
      targetType: inline
      pwsh: true
      script: |
        Import-module '$(Pipeline.Workspace)/ToolArtifact/GitHubRelease.psm1'
        $releaseVersion = '$(ReleaseTag)' -replace '^v',''
        Write-Verbose -Verbose "Available modules: "
        Get-Module | Write-Verbose -Verbose

        $filePath = Get-ChildItem -Path "$(Pipeline.Workspace)/CHANGELOG" -Filter '*.md' | Select-Object -First 1 -ExpandProperty FullName
  
        if (-not (Test-Path $filePath)) {
          throw "$filePath not found"
        }
  
        $changelog = Get-Content -Path $filePath
  
        $headingPattern = "^## \[\d+\.\d+\.\d+"
        $headingStartLines = $changelog | Select-String -Pattern $headingPattern | Select-Object -ExpandProperty LineNumber
        $startLine = $headingStartLines[0]
        $endLine = $headingStartLines[1] - 1
  
        $clContent = $changelog | Select-Object -Skip ($startLine-1) -First ($endLine - $startLine) | Out-String
  
        Write-Verbose -Verbose "Selected content: `n$clContent"
  
        Publish-ReleaseDraft -Tag '$(ReleaseTag)' -Name '$(ReleaseTag) Release of PowerShell' -Description $clContent -User PowerShell -Repository PowerShell  -PackageFolder "$(Pipeline.Workspace)/GitHubPackages" -Token $(GitHubReleasePat)
    displayName: Publish Release Draft
