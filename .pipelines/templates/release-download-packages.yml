jobs:
- job: upload_packages
  displayName: Upload packages
  condition: succeeded()
  pool:
    type: windows
  variables:
  - template: ./variable/release-shared.yml@self
    parameters:
      REPOROOT: $(Build.SourcesDirectory)
      SBOM: true

  steps:
  - pwsh: |
      Get-ChildItem -Path env: | Out-String -width 9999 -Stream | write-Verbose -Verbose
    displayName: Capture environment variables
  
  - download: PSPackagesOfficial
    artifact: drop_linux_package_deb
    displayName: Download linux deb packages

  - download: PSPackagesOfficial
    artifact: drop_linux_package_fxdependent
    displayName: Download linux fx packages

  - download: PSPackagesOfficial
    artifact: drop_linux_package_mariner_arm64
    displayName: Download linux mariner packages

  - download: PSPackagesOfficial
    artifact: drop_linux_package_mariner_x64
    displayName: Download linux mariner x64 packages

  - download: PSPackagesOfficial
    artifact: drop_linux_package_minSize
    displayName: Download linux min packages

  - download: PSPackagesOfficial
    artifact: drop_linux_package_rpm
    displayName: Download linux rpm packages

  - download: PSPackagesOfficial
    artifact: drop_linux_package_tar
    displayName: Download linux tar packages

  - download: PSPackagesOfficial
    artifact: drop_linux_package_tar_alpine
    displayName: Download linux tar alpine packages

  - download: PSPackagesOfficial
    artifact: drop_linux_package_tar_alpine_fxd
    displayName: Download linux tar alpine fxd packages

  - download: PSPackagesOfficial
    artifact: drop_linux_package_tar_arm
    displayName: Download linux tar arm packages

  - download: PSPackagesOfficial
    artifact: drop_linux_package_tar_arm64
    displayName: Download linux tar arm 64 packages

  - download: PSPackagesOfficial
    artifact: drop_nupkg_build_nupkg
    displayName: Download nupkg packages

  - download: PSPackagesOfficial
    artifact: drop_windows_package_package_win_arm64
    displayName: Download windows arm64 packages

  - download: PSPackagesOfficial
    artifact: drop_windows_package_package_win_fxdependent
    displayName: Download windows fxdependent packages

  - download: PSPackagesOfficial
    artifact: drop_windows_package_package_win_fxdependentWinDesktop
    displayName: Download windows fxdependentWinDesktop packages

  - download: PSPackagesOfficial
    artifact: drop_windows_package_package_win_minsize
    displayName: Download windows minsize packages

  - download: PSPackagesOfficial
    artifact: drop_windows_package_package_win_x64
    displayName: Download windows x64 packages

  - download: PSPackagesOfficial
    artifact: drop_windows_package_package_win_x86
    displayName: Download windows x86 packages

  - download: PSPackagesOfficial
    artifact: macos-pkgs
    displayName: Download macos tar packages

  - download: PSPackagesOfficial
    artifact: drop_mac_package_sign_package_macos_arm64
    displayName: Download macos arm packages

  - download: PSPackagesOfficial
    artifact: drop_mac_package_sign_package_macos_x64
    displayName: Download macos x64 packages

  - pwsh: |
      Get-ChildItem '$(Pipeline.Workspace)/PSPackagesOfficial' -Recurse | Select-Object -ExpandProperty FullName
    displayName: 'Capture downloads'
  
  - pwsh: |
      $PackagesPath = '$(Pipeline.Workspace)/PSPackagesOfficial'
      Write-Verbose -Verbose "Copying Github Release files in $PackagesPath to use in Release Pipeline"
      
      Write-Verbose -Verbose "Creating output directory for GitHub Release files: $(ob_outputDirectory)/GitHubPackages"
      New-Item -Path $(ob_outputDirectory)/GitHubPackages -ItemType Directory -Force
      Get-ChildItem -Path "$PackagesPath/*" -Recurse | 
        Where-Object { $_.Extension -notin '.msix', '.nupkg' } |
        Where-Object { $_.Extension -in '.gz', '.pkg', '.msi', '.zip', '.deb', '.rpm', '.zip' } |
        Copy-Item -Destination $(ob_outputDirectory)/GitHubPackages -Recurse -Verbose
      
      Write-Verbose -Verbose "Creating output directory for NuGet packages: $(ob_outputDirectory)/NuGetPackages"
      New-Item -Path $(ob_outputDirectory)/NuGetPackages -ItemType Directory -Force
      Get-ChildItem -Path "$PackagesPath/*" -Recurse | 
        Where-Object { $_.Extension -eq '.nupkg' } | 
        Copy-Item -Destination $(ob_outputDirectory)/NuGetPackages -Recurse -Verbose
    displayName: Copy downloads to Artifacts
