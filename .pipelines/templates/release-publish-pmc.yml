jobs:
- job: PMCPublish
  displayName: Publish to PMC
  condition: succeeded()
  pool:
    type: release
  variables:
  - name: runCodesignValidationInjection
    value: false
  - name: NugetSecurityAnalysisWarningLevel
    value: none
  - name: DOTNET_SKIP_FIRST_TIME_EXPERIENCE
    value: 1
  - group: 'mscodehub-code-read-akv'
  - group: 'packages.microsoft.com'
  - name: ob_outputDirectory
    value: '$(Build.ArtifactStagingDirectory)/ONEBRANCH_ARTIFACT'
  - name: ob_sdl_codeSignValidation_enabled
    value: false
  - name: ob_sdl_binskim_enabled
    value: false
  - name: ob_sdl_tsa_configFile
    value: $(Build.SourcesDirectory)\PowerShell\.config\tsaoptions.json
  - name: ob_sdl_credscan_suppressionsFile
    value: $(Build.SourcesDirectory)\PowerShell\.config\suppress.json

  steps:
  - task: DownloadPipelineArtifact@2
    inputs:
      targetPath: '$(Pipeline.Workspace)'
      artifact: drop_PrepForEV2_CopyEv2FilesToArtifact
    displayName: 'Download drop_PrepForEV2_CopyEv2FilesToArtifact artifact that has all files needed'

  - task: DownloadPipelineArtifact@2
    inputs:
      buildType: 'current'
      targetPath: '$(Pipeline.Workspace)'
    displayName: 'Download to get EV2 Files'

  - task: vsrm-ev2.vss-services-ev2.adm-release-task.ExpressV2Internal@1
    displayName: 'Ev2: Push to PMC'
    inputs:
      UseServerMonitorTask: true
      EnableStrictValidation: false
      ValidateOnly: false
      ConnectedServiceName: 'docker-deployement-test'            
      ServiceRootLocation: 'LinkedArtifact'
      RolloutSpecType: 'RSPath'
      ServiceRootPath: '$(Pipeline.Workspace)/drop_PrepForEV2_CopyEV2FilesToArtifact/EV2Specs/ServiceGroupRoot'
      RolloutSpecPath: '$(Pipeline.Workspace)/drop_PrepForEV2_CopyEV2FilesToArtifact/EV2Specs/ServiceGroupRoot/RolloutSpec.json'
