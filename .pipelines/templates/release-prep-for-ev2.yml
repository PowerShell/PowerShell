jobs:
- job: CopyEV2FilesToArtifact
  displayName: Copy EV2 Files to Artifact
  pool:
    type: windows
  variables:
  - name: ob_outputDirectory
    value: '$(Build.ArtifactStagingDirectory)/ONEBRANCH_ARTIFACT'
  - name: repoRoot
    value: '$(Build.SourcesDirectory)/PowerShell'
  - group: 'mscodehub-code-read-akv'
  - name: ob_tipsign_enabled
    value: true # Enable TiP sign
  steps:
    - checkout: self ## the global setting on lfs didn't work
      lfs: false

    - template: release-SetReleaseTagandContainerName.yml
  
    - pwsh: |
        $packageVersion = '$(ReleaseTag)'.ToLowerInvariant() -replace '^v',''
        $vstsCommandString = "vso[task.setvariable variable=packageVersion]$packageVersion"
        Write-Host "sending " + $vstsCommandString
        Write-Host "##$vstsCommandString"
      displayName: Set Package version
  
    - pwsh: |
        $branch = 'mirror-target'
        $gitArgs = "clone",
        "--verbose",
        "--branch",
        "$branch",
        "https://$(mscodehubCodeReadPat)@mscodehub.visualstudio.com/PowerShellCore/_git/Internal-PowerShellTeam-Tools",
        '$(Pipeline.Workspace)/tools'
        $gitArgs | Write-Verbose -Verbose
        git $gitArgs
      displayName: Clone Internal-PowerShellTeam-Tools from MSCodeHub

    - pwsh: |
        Get-ChildItem Env: | Out-String -Stream | write-Verbose -Verbose
      displayName: 'Capture Environment Variables'

    - pwsh: |
        Get-ChildItem '$(Pipeline.Workspace)' -Recurse | Out-String -Stream | write-Verbose -Verbose
        Get-ChildItem '$(Build.SourcesDirectory)'
      displayName: 'Capture Workspace'

    - pwsh: |
        $pathToRunFolder = Join-Path -Path "$(repoRoot)/.pipelines/EV2Specs/ServiceGroupRoot/Shell/Run" -ChildPath 'Run.ps1'
        $pathExists = Test-Path $pathToRunFolder
        Write-Verbose -Verbose "path exists: $pathExists"
      displayName: 'Test if Run.ps1 path exists/can be found'

    # - task: onebranch.pipeline.signing@1
    #   displayName: Sign Release Tools
    #   inputs:
    #     command: 'sign'
    #     signing_profile: internal_azure_service
    #     files_to_sign: '**\*.ps1'
    #     search_root: '$(Pipeline.Workspace)/tools/packages.microsoft.com-v4'

    - task: onebranch.pipeline.signing@1
      displayName: Sign Run.ps1
      inputs:
        command: 'sign'
        signing_profile: 'tipsign' # external_distribution
        files_to_sign: '*.ps1'
        search_root: '$(repoRoot)/.pipelines/EV2Specs/ServiceGroupRoot/Shell/Run'

    - pwsh: |
        $srcPath = Join-Path '$(repoRoot)/.pipelines/EV2Specs/ServiceGroupRoot' -ChildPath 'Shell'
        $pathToRunTarFile = Join-Path '$(repoRoot)/.pipelines/EV2Specs/ServiceGroupRoot/Shell' -ChildPath "Run.tar"
        tar -cvf $pathToRunTarFile -C $srcPath ./Run
      displayName: Compress Run script into tar file as needed for EV2 Shell extension

    # - task: CopyFiles@2
    #   inputs:
    #     Contents: '$(Pipeline.Workspace)/tools/packages.microsoft.com-v4/**' 
    #     TargetFolder: 'EV2Specs/ServiceGroupRoot/tools'

    - task: CopyFiles@2
      inputs:
        Contents: 'EV2Specs/**'
        TargetFolder: $(ob_outputDirectory)
