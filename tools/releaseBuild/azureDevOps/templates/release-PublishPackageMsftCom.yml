parameters:
  - name: skipPublish
    default: false
    type: boolean

steps:
- template: release-SetReleaseTagAndContainerName.yml

- pwsh: |
    $packageVersion = '$(ReleaseTag)'.ToLowerInvariant() -replace '^v',''
    $vstsCommandString = "vso[task.setvariable variable=packageVersion]$packageVersion"
    Write-Host "sending " + $vstsCommandString
    Write-Host "##$vstsCommandString"
  displayName: Set Package version

- pwsh: |
    $branch = 'main-mirror'
    $gitArgs = "clone",
    "--verbose",
    "--branch",
    "$branch",
    "https://$(mscodehubCodeReadPat)@mscodehub.visualstudio.com/PowerShellCore/_git/Internal-PowerShellTeam-Tools",
    '$(Pipeline.Workspace)/tools'
    $gitArgs | Write-Verbose -Verbose
    git $gitArgs
  displayName: Clone Internal-PowerShellTeam-Tools from MSCodeHub

- task: PipAuthenticate@1
  inputs:
    artifactFeeds: 'pmc'
    pythonDownloadServiceConnections: pmcDownload

- pwsh: |
    pip install pmc-cli

    $newPath = (resolve-path '~/.local/bin').providerpath
    $vstsCommandString = "vso[task.setvariable variable=PATH]${env:PATH}:$newPath"
    Write-Host "sending " + $vstsCommandString
    Write-Host "##$vstsCommandString"
  displayName: Install pmc cli

- pwsh: |
    $metadata = Get-Content -Path "$(Build.SourcesDirectory)/tools/metadata.json" -Raw | ConvertFrom-Json
    $params = @{
        ReleaseTag = "$(ReleaseTag)"
        AadClientId = "$(PmcCliClientID)"
        BlobFolderName = "$(AzureVersion)"
        LTS = $metadata.LTSRelease.Latest
        ForProduction = $true
        SkipPublish = $${{ parameters.skipPublish }}
        MappingFilePath = '$(System.DefaultWorkingDirectory)/tools/packages.microsoft.com/mapping.json'
    }

    $params | Out-String -width 9999 -Stream | write-Verbose -Verbose

    & '$(Pipeline.Workspace)/tools/packages.microsoft.com-v4/releaseLinuxPackages.ps1' @params
  displayName: Run release script
