<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="https://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="https://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TooManyNestedPromptsError" xml:space="preserve">
    <value>Cannot display prompt because too many nested prompts are already running.</value>
  </data>
  <data name="InputExitCurrentLoopOutOfSyncError" xml:space="preserve">
    <value>Cannot process input loop. ExitCurrentLoop was called when no InputLoops were running.</value>
  </data>
  <data name="DefaultPrompt" xml:space="preserve">
    <value>PS&gt;</value>
  </data>
  <data name="ShellCannotBeStarted" xml:space="preserve">
    <value>The shell cannot be started. A failure occurred during initialization:</value>
  </data>
  <data name="ShellCannotBeStartedWithConfigConflict" xml:space="preserve">
    <value>The shell cannot be started. An InitialSessionState object has been provided along with a -ConfigurationFile argument. Both configuration directives cannot be used at the same time.</value>
  </data>
  <data name="UnhandledExceptionShutdownMessage" xml:space="preserve">
    <value>An error has occurred that was not properly handled. Additional information is shown below. The PowerShell process will exit.</value>
  </data>
  <data name="TranscriptPrologue" xml:space="preserve">
    <value>**********************
PowerShell transcript start
Start time: {0:yyyyMMddHHmmss}
Username  : {1}\{2}
Machine   : {3} ({4})
**********************</value>
  </data>
  <data name="TranscriptEpilogue" xml:space="preserve">
    <value>**********************
PowerShell transcript end
End time: {0:yyyyMMddHHmmss}
**********************</value>
  </data>
  <data name="InitialCommandNotExecuted" xml:space="preserve">
    <value>Command '{0}' could not be run because some PowerShell Snap-Ins did not load.</value>
  </data>
  <data name="CommandNotExecuted" xml:space="preserve">
    <value>Command '{0}' was not run as the session in which it was intended to run was either closed or broken</value>
  </data>
  <data name="EnteringDebugger" xml:space="preserve">
    <value>Entering debug mode. Use h or ? for help. </value>
  </data>
  <data name="HitBreakpoint" xml:space="preserve">
    <value>Hit {0}</value>
  </data>
  <data name="DebuggerSourceCodeFormat" xml:space="preserve">
    <value>{0}:{1,-3} {2}</value>
  </data>
  <data name="SessionDoesNotSupportDebugger" xml:space="preserve">
    <value>
The current session does not support debugging; execution will continue.

</value>
  </data>
  <data name="CannotLoadPSReadline" xml:space="preserve">
    <value>Cannot load PSReadline module.  Console is running without PSReadline.</value>
  </data>
  <data name="ConflictingServerModeParameters" xml:space="preserve">
    <value>More than one server mode parameter was specified. Server mode parameters must be used exclusively.</value>
  </data>
  <data name="SlowProfileLoadingMessage" xml:space="preserve">
    <value>Loading personal and system profiles took {0}ms.</value>
  </data>
  <data name="RunAsAdministrator" xml:space="preserve">
    <value>Run as Administrator</value>
  </data>
  <data name="PushRunspaceNotRemote" xml:space="preserve">
    <value>PushRunspace can only push a remote runspace.</value>
  </data>
</root>
