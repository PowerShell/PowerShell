//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace System.Management.Automation
{
    using System;
    using System.Reflection;
    using System.Resources;
    using System.Globalization;

    internal class RemotingErrorIdStrings
    {
        private static ResourceManager resourceMan;
        private static CultureInfo resourceCulture;

        internal RemotingErrorIdStrings() { }

        internal static ResourceManager ResourceManager
        {
            get
            {
                if (object.ReferenceEquals(resourceMan, null))
                {
                    resourceMan = new ResourceManager("System.Management.Automation.resources.RemotingErrorIdStrings", typeof(RemotingErrorIdStrings).GetTypeInfo().Assembly);
                }
                return resourceMan;
            }
        }

        internal static CultureInfo Culture
        {
            get { return resourceCulture; }
            set { resourceCulture = value; }
        }

        // Resource keys as static string properties
        public static string DefaultRemotingExceptionMessage => ResourceManager.GetString("DefaultRemotingExceptionMessage", resourceCulture);
        public static string OutOfMemory => ResourceManager.GetString("OutOfMemory", resourceCulture);
        public static string UnsupportedOSForRemoteEnumeration => ResourceManager.GetString("UnsupportedOSForRemoteEnumeration", resourceCulture);
        public static string PipelineIdsDoNotMatch => ResourceManager.GetString("PipelineIdsDoNotMatch", resourceCulture);
        public static string PipelineNotFoundOnServer => ResourceManager.GetString("PipelineNotFoundOnServer", resourceCulture);
        public static string PipelineStopped => ResourceManager.GetString("PipelineStopped", resourceCulture);
        public static string RunspaceAlreadyExists => ResourceManager.GetString("RunspaceAlreadyExists", resourceCulture);
        public static string RunspaceIdsDoNotMatch => ResourceManager.GetString("RunspaceIdsDoNotMatch", resourceCulture);
        public static string RemoteRunspaceOpenFailed => ResourceManager.GetString("RemoteRunspaceOpenFailed", resourceCulture);
        public static string RunspaceCannotBeFound => ResourceManager.GetString("RunspaceCannotBeFound", resourceCulture);
        public static string ResponsePromptIdCannotBeFound => ResourceManager.GetString("ResponsePromptIdCannotBeFound", resourceCulture);
        public static string RemoteHostCallFailed => ResourceManager.GetString("RemoteHostCallFailed", resourceCulture);
        public static string RemoteHostMethodNotImplemented => ResourceManager.GetString("RemoteHostMethodNotImplemented", resourceCulture);
        public static string RemoteHostDataEncodingNotSupported => ResourceManager.GetString("RemoteHostDataEncodingNotSupported", resourceCulture);
        public static string RemoteHostDataDecodingNotSupported => ResourceManager.GetString("RemoteHostDataDecodingNotSupported", resourceCulture);
        public static string NestedPipelineNotSupported => ResourceManager.GetString("NestedPipelineNotSupported", resourceCulture);
        public static string RelativeUriForRunspacePathNotSupported => ResourceManager.GetString("RelativeUriForRunspacePathNotSupported", resourceCulture);
        public static string RemoteHostDecodingFailed => ResourceManager.GetString("RemoteHostDecodingFailed", resourceCulture);
        public static string MustBeAdminToOverrideThreadOptions => ResourceManager.GetString("MustBeAdminToOverrideThreadOptions", resourceCulture);
        public static string RemoteHostPromptForCredentialModifiedCaption => ResourceManager.GetString("RemoteHostPromptForCredentialModifiedCaption", resourceCulture);
        public static string RemoteHostPromptForCredentialModifiedMessage => ResourceManager.GetString("RemoteHostPromptForCredentialModifiedMessage", resourceCulture);
        public static string RemoteHostReadLineAsSecureStringPrompt => ResourceManager.GetString("RemoteHostReadLineAsSecureStringPrompt", resourceCulture);
        public static string RemoteHostGetBufferContents => ResourceManager.GetString("RemoteHostGetBufferContents", resourceCulture);
        public static string RemoteHostPromptSecureStringPrompt => ResourceManager.GetString("RemoteHostPromptSecureStringPrompt", resourceCulture);
        public static string ReceivedUnsupportedRemoteHostCall => ResourceManager.GetString("ReceivedUnsupportedRemoteHostCall", resourceCulture);
        public static string ReceivedUnsupportedAction => ResourceManager.GetString("ReceivedUnsupportedAction", resourceCulture);
        public static string ReceivedUnsupportedDataType => ResourceManager.GetString("ReceivedUnsupportedDataType", resourceCulture);
        public static string MissingDestination => ResourceManager.GetString("MissingDestination", resourceCulture);
        public static string MissingTarget => ResourceManager.GetString("MissingTarget", resourceCulture);
        public static string MissingRunspaceId => ResourceManager.GetString("MissingRunspaceId", resourceCulture);
        public static string MissingDataType => ResourceManager.GetString("MissingDataType", resourceCulture);
        public static string MissingCallId => ResourceManager.GetString("MissingCallId", resourceCulture);
        public static string MissingMethodName => ResourceManager.GetString("MissingMethodName", resourceCulture);
        public static string MissingIsStartFragment => ResourceManager.GetString("MissingIsStartFragment", resourceCulture);
        public static string MissingProperty => ResourceManager.GetString("MissingProperty", resourceCulture);
        public static string ObjectIdsNotMatching => ResourceManager.GetString("ObjectIdsNotMatching", resourceCulture);
        public static string ObjectIdCannotBeLessThanZero => ResourceManager.GetString("ObjectIdCannotBeLessThanZero", resourceCulture);
        public static string FragmentIdsNotInSequence => ResourceManager.GetString("FragmentIdsNotInSequence", resourceCulture);
        public static string ObjectIsTooBig => ResourceManager.GetString("ObjectIsTooBig", resourceCulture);
        public static string MissingIsEndFragment => ResourceManager.GetString("MissingIsEndFragment", resourceCulture);
        public static string DeserializedObjectIsNull => ResourceManager.GetString("DeserializedObjectIsNull", resourceCulture);
        public static string BlobLengthNotInRange => ResourceManager.GetString("BlobLengthNotInRange", resourceCulture);
        public static string DecodingErrorForErrorRecord => ResourceManager.GetString("DecodingErrorForErrorRecord", resourceCulture);
        public static string DecodingErrorForPipelineStateInfo => ResourceManager.GetString("DecodingErrorForPipelineStateInfo", resourceCulture);
        public static string DecodingErrorForRunspaceStateInfo => ResourceManager.GetString("DecodingErrorForRunspaceStateInfo", resourceCulture);
        public static string ReceivedUnsupportedRemotingTargetInterfaceType => ResourceManager.GetString("ReceivedUnsupportedRemotingTargetInterfaceType", resourceCulture);
        public static string UnknownTargetClass => ResourceManager.GetString("UnknownTargetClass", resourceCulture);
        public static string MissingTargetClass => ResourceManager.GetString("MissingTargetClass", resourceCulture);
        public static string DecodingErrorForRunspacePoolStateInfo => ResourceManager.GetString("DecodingErrorForRunspacePoolStateInfo", resourceCulture);
        public static string DecodingErrorForMinRunspaces => ResourceManager.GetString("DecodingErrorForMinRunspaces", resourceCulture);
        public static string DecodingErrorForMaxRunspaces => ResourceManager.GetString("DecodingErrorForMaxRunspaces", resourceCulture);
        public static string DecodingErrorForPowerShellStateInfo => ResourceManager.GetString("DecodingErrorForPowerShellStateInfo", resourceCulture);
        public static string CantCastPropertyToExpectedType => ResourceManager.GetString("CantCastPropertyToExpectedType", resourceCulture);
        public static string CantCastRemotingDataToPSObject => ResourceManager.GetString("CantCastRemotingDataToPSObject", resourceCulture);
        public static string CantCastCommandToPSObject => ResourceManager.GetString("CantCastCommandToPSObject", resourceCulture);
        public static string CantCastParameterToPSObject => ResourceManager.GetString("CantCastParameterToPSObject", resourceCulture);
        public static string NotEnoughHeaderForRemoteDataObject => ResourceManager.GetString("NotEnoughHeaderForRemoteDataObject", resourceCulture);
        public static string RemotingDestinationNotForMe => ResourceManager.GetString("RemotingDestinationNotForMe", resourceCulture);
        public static string ClientNegotiationTimeout => ResourceManager.GetString("ClientNegotiationTimeout", resourceCulture);
        public static string ClientNegotiationFailed => ResourceManager.GetString("ClientNegotiationFailed", resourceCulture);
        public static string ClientNotFoundCapabilityProperties => ResourceManager.GetString("ClientNotFoundCapabilityProperties", resourceCulture);
        public static string ServerRequestedToCloseSession => ResourceManager.GetString("ServerRequestedToCloseSession", resourceCulture);
        public static string ServerNegotiationFailed => ResourceManager.GetString("ServerNegotiationFailed", resourceCulture);
        public static string ServerConnectFailedOnNegotiation => ResourceManager.GetString("ServerConnectFailedOnNegotiation", resourceCulture);
        public static string ServerConnectFailedOnInputValidation => ResourceManager.GetString("ServerConnectFailedOnInputValidation", resourceCulture);
        public static string ServerConnectFailedOnServerStateValidation => ResourceManager.GetString("ServerConnectFailedOnServerStateValidation", resourceCulture);
        public static string ServerConnectFailedOnMismatchedRunspacePoolProperties => ResourceManager.GetString("ServerConnectFailedOnMismatchedRunspacePoolProperties", resourceCulture);
        public static string ServerNotFoundCapabilityProperties => ResourceManager.GetString("ServerNotFoundCapabilityProperties", resourceCulture);
        public static string ServerNegotiationTimeout => ResourceManager.GetString("ServerNegotiationTimeout", resourceCulture);
        public static string ClientRequestedToCloseSession => ResourceManager.GetString("ClientRequestedToCloseSession", resourceCulture);
        public static string FatalErrorCausingClose => ResourceManager.GetString("FatalErrorCausingClose", resourceCulture);
        public static string ClientKeyExchangeFailed => ResourceManager.GetString("ClientKeyExchangeFailed", resourceCulture);
        public static string ServerKeyExchangeFailed => ResourceManager.GetString("ServerKeyExchangeFailed", resourceCulture);
        public static string ConnectFailed => ResourceManager.GetString("ConnectFailed", resourceCulture);
        public static string CloseIsCalled => ResourceManager.GetString("CloseIsCalled", resourceCulture);
        public static string ForceClosed => ResourceManager.GetString("ForceClosed", resourceCulture);
        public static string CloseFailed => ResourceManager.GetString("CloseFailed", resourceCulture);
        public static string CloseCompleted => ResourceManager.GetString("CloseCompleted", resourceCulture);
        public static string UnsupportedWaitHandleType => ResourceManager.GetString("UnsupportedWaitHandleType", resourceCulture);
        public static string ReceivedDataStreamIsNotStdout => ResourceManager.GetString("ReceivedDataStreamIsNotStdout", resourceCulture);
        public static string StdInIsNotOpen => ResourceManager.GetString("StdInIsNotOpen", resourceCulture);
        public static string NativeWriteFileFailed => ResourceManager.GetString("NativeWriteFileFailed", resourceCulture);
        public static string NativeReadFileFailed => ResourceManager.GetString("NativeReadFileFailed", resourceCulture);
        public static string InvalidSchemeValue => ResourceManager.GetString("InvalidSchemeValue", resourceCulture);
        public static string ClientReceiveFailed => ResourceManager.GetString("ClientReceiveFailed", resourceCulture);
        public static string ClientSendFailed => ResourceManager.GetString("ClientSendFailed", resourceCulture);
        public static string CommandHandleIsNull => ResourceManager.GetString("CommandHandleIsNull", resourceCulture);
        public static string StdInCannotBeSetToNoWait => ResourceManager.GetString("StdInCannotBeSetToNoWait", resourceCulture);
        public static string PortIsOutOfRange => ResourceManager.GetString("PortIsOutOfRange", resourceCulture);
        public static string ServerProcessExited => ResourceManager.GetString("ServerProcessExited", resourceCulture);
        public static string CannotGetStdInHandle => ResourceManager.GetString("CannotGetStdInHandle", resourceCulture);
        public static string CannotGetStdOutHandle => ResourceManager.GetString("CannotGetStdOutHandle", resourceCulture);
        public static string CannotGetStdErrHandle => ResourceManager.GetString("CannotGetStdErrHandle", resourceCulture);
        public static string ConnectExFailed => ResourceManager.GetString("ConnectExFailed", resourceCulture);
        public static string ConnectExCallBackError => ResourceManager.GetString("ConnectExCallBackError", resourceCulture);
        public static string CloseExCallBackError => ResourceManager.GetString("CloseExCallBackError", resourceCulture);
        public static string SendExFailed => ResourceManager.GetString("SendExFailed", resourceCulture);
        public static string SendExCallBackError => ResourceManager.GetString("SendExCallBackError", resourceCulture);
        public static string ReceiveExFailed => ResourceManager.GetString("ReceiveExFailed", resourceCulture);
        public static string ReceiveExCallBackError => ResourceManager.GetString("ReceiveExCallBackError", resourceCulture);
        public static string RunShellCommandExFailed => ResourceManager.GetString("RunShellCommandExFailed", resourceCulture);
        public static string RunShellCommandExCallBackError => ResourceManager.GetString("RunShellCommandExCallBackError", resourceCulture);
        public static string ReconnectShellCommandExCallBackError => ResourceManager.GetString("ReconnectShellCommandExCallBackError", resourceCulture);
        public static string CommandSendExFailed => ResourceManager.GetString("CommandSendExFailed", resourceCulture);
        public static string CommandSendExCallBackError => ResourceManager.GetString("CommandSendExCallBackError", resourceCulture);
        public static string CommandReceiveExFailed => ResourceManager.GetString("CommandReceiveExFailed", resourceCulture);
        public static string CommandReceiveExCallBackError => ResourceManager.GetString("CommandReceiveExCallBackError", resourceCulture);
        public static string GeneralError => ResourceManager.GetString("GeneralError", resourceCulture);
        public static string TroubleShootingHelpTopic => ResourceManager.GetString("TroubleShootingHelpTopic", resourceCulture);
        public static string DisconnectShellExFailed => ResourceManager.GetString("DisconnectShellExFailed", resourceCulture);
        public static string DisconnectShellExCallBackErrr => ResourceManager.GetString("DisconnectShellExCallBackErrr", resourceCulture);
        public static string ReconnectShellExFailed => ResourceManager.GetString("ReconnectShellExFailed", resourceCulture);
        public static string ReconnectShellExCallBackErrr => ResourceManager.GetString("ReconnectShellExCallBackErrr", resourceCulture);
        public static string IPCTransportConnectError => ResourceManager.GetString("IPCTransportConnectError", resourceCulture);
        public static string NonExistentInitialSessionStateProvider => ResourceManager.GetString("NonExistentInitialSessionStateProvider", resourceCulture);
        public static string InitialSessionStateNull => ResourceManager.GetString("InitialSessionStateNull", resourceCulture);
        public static string MandatoryValueNotPresent => ResourceManager.GetString("MandatoryValueNotPresent", resourceCulture);
        public static string MandatoryValueNotInCorrectFormat => ResourceManager.GetString("MandatoryValueNotInCorrectFormat", resourceCulture);
        public static string StartupScriptNotCorrect => ResourceManager.GetString("StartupScriptNotCorrect", resourceCulture);
        public static string DuplicateInitializationParameterFound => ResourceManager.GetString("DuplicateInitializationParameterFound", resourceCulture);
        public static string NoAttributesFoundForParamElement => ResourceManager.GetString("NoAttributesFoundForParamElement", resourceCulture);
        public static string AssemblyLoadAttributesNotFound => ResourceManager.GetString("AssemblyLoadAttributesNotFound", resourceCulture);
        public static string UnableToLoadAssembly => ResourceManager.GetString("UnableToLoadAssembly", resourceCulture);
        public static string UnableToLoadType => ResourceManager.GetString("UnableToLoadType", resourceCulture);
        public static string TypeNeedsAssembly => ResourceManager.GetString("TypeNeedsAssembly", resourceCulture);
        public static string RedirectedURINotWellFormatted => ResourceManager.GetString("RedirectedURINotWellFormatted", resourceCulture);
        public static string URIEndPointNotResolved => ResourceManager.GetString("URIEndPointNotResolved", resourceCulture);
        public static string URIRedirectWarningToHost => ResourceManager.GetString("URIRedirectWarningToHost", resourceCulture);
        public static string URIRedirectionReported => ResourceManager.GetString("URIRedirectionReported", resourceCulture);
        public static string ReceivedObjectSizeExceededMaximumClient => ResourceManager.GetString("ReceivedObjectSizeExceededMaximumClient", resourceCulture);
        public static string ReceivedDataSizeExceededMaximumClient => ResourceManager.GetString("ReceivedDataSizeExceededMaximumClient", resourceCulture);
        public static string ReceivedObjectSizeExceededMaximumServer => ResourceManager.GetString("ReceivedObjectSizeExceededMaximumServer", resourceCulture);
        public static string ReceivedDataSizeExceededMaximumServer => ResourceManager.GetString("ReceivedDataSizeExceededMaximumServer", resourceCulture);
        public static string StartupScriptThrewTerminatingError => ResourceManager.GetString("StartupScriptThrewTerminatingError", resourceCulture);
        public static string RemoteRunspaceInfoHasDuplicates => ResourceManager.GetString("RemoteRunspaceInfoHasDuplicates", resourceCulture);
        public static string RemoteRunspaceInfoLimitExceeded => ResourceManager.GetString("RemoteRunspaceInfoLimitExceeded", resourceCulture);
        public static string RemoteRunspaceOpenUnknownState => ResourceManager.GetString("RemoteRunspaceOpenUnknownState", resourceCulture);
        public static string UriSpecifiedNotValid => ResourceManager.GetString("UriSpecifiedNotValid", resourceCulture);
        public static string RemoteRunspaceClosed => ResourceManager.GetString("RemoteRunspaceClosed", resourceCulture);
        public static string RemoteRunspaceNotAvailableForSpecifiedComputer => ResourceManager.GetString("RemoteRunspaceNotAvailableForSpecifiedComputer", resourceCulture);
        public static string RemoteRunspaceNotAvailableForSpecifiedRunspaceId => ResourceManager.GetString("RemoteRunspaceNotAvailableForSpecifiedRunspaceId", resourceCulture);
        public static string StopPSJobWhatIfTarget => ResourceManager.GetString("StopPSJobWhatIfTarget", resourceCulture);
        public static string NewRunspaceAmbiguousAuthentication => ResourceManager.GetString("NewRunspaceAmbiguousAuthentication", resourceCulture);
        public static string WildCardErrorFilePathParameter => ResourceManager.GetString("WildCardErrorFilePathParameter", resourceCulture);
        public static string FilePathNotFromFileSystemProvider => ResourceManager.GetString("FilePathNotFromFileSystemProvider", resourceCulture);
        public static string FilePathShouldPS1Extension => ResourceManager.GetString("FilePathShouldPS1Extension", resourceCulture);
        public static string InvalidComputerName => ResourceManager.GetString("InvalidComputerName", resourceCulture);
        public static string InvalidJobStateGeneral => ResourceManager.GetString("InvalidJobStateGeneral", resourceCulture);
        public static string JobWithSpecifiedNameNotFound => ResourceManager.GetString("JobWithSpecifiedNameNotFound", resourceCulture);
        public static string JobWithSpecifiedInstanceIdNotFound => ResourceManager.GetString("JobWithSpecifiedInstanceIdNotFound", resourceCulture);
        public static string JobWithSpecifiedSessionIdNotFound => ResourceManager.GetString("JobWithSpecifiedSessionIdNotFound", resourceCulture);
        public static string JobWithSpecifiedNameNotCompleted => ResourceManager.GetString("JobWithSpecifiedNameNotCompleted", resourceCulture);
        public static string JobWithSpecifiedSessionIdNotCompleted => ResourceManager.GetString("JobWithSpecifiedSessionIdNotCompleted", resourceCulture);
        public static string JobWithSpecifiedInstanceIdNotCompleted => ResourceManager.GetString("JobWithSpecifiedInstanceIdNotCompleted", resourceCulture);
        public static string RemovePSJobWhatIfTarget => ResourceManager.GetString("RemovePSJobWhatIfTarget", resourceCulture);
        public static string ComputerNameParamNotSupported => ResourceManager.GetString("ComputerNameParamNotSupported", resourceCulture);
        public static string RunspaceParamNotSupported => ResourceManager.GetString("RunspaceParamNotSupported", resourceCulture);
        public static string RemoteRunspaceNotAvailableForSpecifiedName => ResourceManager.GetString("RemoteRunspaceNotAvailableForSpecifiedName", resourceCulture);
        public static string RemoteRunspaceNotAvailableForSpecifiedSessionId => ResourceManager.GetString("RemoteRunspaceNotAvailableForSpecifiedSessionId", resourceCulture);
        public static string ItemNotFoundInRepository => ResourceManager.GetString("ItemNotFoundInRepository", resourceCulture);
        public static string CannotRemoveJob => ResourceManager.GetString("CannotRemoveJob", resourceCulture);
        public static string CSCDoubleParameterOutOfRange => ResourceManager.GetString("CSCDoubleParameterOutOfRange", resourceCulture);
        public static string ProxyAmbiguousAuthentication => ResourceManager.GetString("ProxyAmbiguousAuthentication", resourceCulture);
        public static string ProxyCredentialWithoutAccess => ResourceManager.GetString("ProxyCredentialWithoutAccess", resourceCulture);
        public static string WrongSessionOptionValue => ResourceManager.GetString("WrongSessionOptionValue", resourceCulture);
        public static string PushedRunspaceMustBeOpen => ResourceManager.GetString("PushedRunspaceMustBeOpen", resourceCulture);
        public static string HostDoesNotSupportPushRunspace => ResourceManager.GetString("HostDoesNotSupportPushRunspace", resourceCulture);
        public static string RemoteRunspaceHasMultipleMatchesForSpecifiedRunspaceId => ResourceManager.GetString("RemoteRunspaceHasMultipleMatchesForSpecifiedRunspaceId", resourceCulture);
        public static string RemoteRunspaceHasMultipleMatchesForSpecifiedSessionId => ResourceManager.GetString("RemoteRunspaceHasMultipleMatchesForSpecifiedSessionId", resourceCulture);
        public static string RemoteRunspaceHasMultipleMatchesForSpecifiedName => ResourceManager.GetString("RemoteRunspaceHasMultipleMatchesForSpecifiedName", resourceCulture);
        public static string RemoteRunspaceDoesNotSupportPushRunspace => ResourceManager.GetString("RemoteRunspaceDoesNotSupportPushRunspace", resourceCulture);
        public static string HostInNestedPrompt => ResourceManager.GetString("HostInNestedPrompt", resourceCulture);
        public static string WsmanMaxRedirectionCountVariableDescription => ResourceManager.GetString("WsmanMaxRedirectionCountVariableDescription", resourceCulture);
        public static string PSDefaultSessionOptionDescription => ResourceManager.GetString("PSDefaultSessionOptionDescription", resourceCulture);
        public static string PSSessionConfigurationName => ResourceManager.GetString("PSSessionConfigurationName", resourceCulture);
        public static string PSSessionAppName => ResourceManager.GetString("PSSessionAppName", resourceCulture);
        public static string PSSenderInfoDescription => ResourceManager.GetString("PSSenderInfoDescription", resourceCulture);
        public static string CSCmdsTypeNeedsAssembly => ResourceManager.GetString("CSCmdsTypeNeedsAssembly", resourceCulture);
        public static string CSCmdsShellNotFound => ResourceManager.GetString("CSCmdsShellNotFound", resourceCulture);
        public static string CSCmdsShellNotPowerShellBased => ResourceManager.GetString("CSCmdsShellNotPowerShellBased", resourceCulture);
        public static string CSCmdsPowerShellCoreShellNotModifiable => ResourceManager.GetString("CSCmdsPowerShellCoreShellNotModifiable", resourceCulture);
        public static string CSCmdsWindowsPowerShellCoreNotModifiable => ResourceManager.GetString("CSCmdsWindowsPowerShellCoreNotModifiable", resourceCulture);
        public static string CustomShellNotFound => ResourceManager.GetString("CustomShellNotFound", resourceCulture);
        public static string CSShouldProcessAction => ResourceManager.GetString("CSShouldProcessAction", resourceCulture);
        public static string CSShouldProcessTarget => ResourceManager.GetString("CSShouldProcessTarget", resourceCulture);
        public static string CSShouldProcessTargetAdminEnable => ResourceManager.GetString("CSShouldProcessTargetAdminEnable", resourceCulture);
        public static string NcsCannotDeleteFile => ResourceManager.GetString("NcsCannotDeleteFile", resourceCulture);
        public static string NcsCannotDeleteFileAfterInstall => ResourceManager.GetString("NcsCannotDeleteFileAfterInstall", resourceCulture);
        public static string NcsCannotWritePluginContent => ResourceManager.GetString("NcsCannotWritePluginContent", resourceCulture);
        public static string NcsScriptMessageV => ResourceManager.GetString("NcsScriptMessageV", resourceCulture);
        public static string NcsShouldProcessTargetSDDL => ResourceManager.GetString("NcsShouldProcessTargetSDDL", resourceCulture);
        public static string RcsScriptMessageV => ResourceManager.GetString("RcsScriptMessageV", resourceCulture);
        public static string GcsScriptMessageV => ResourceManager.GetString("GcsScriptMessageV", resourceCulture);
        public static string ScsScriptMessageV => ResourceManager.GetString("ScsScriptMessageV", resourceCulture);
        public static string ScsShouldProcessTargetSDDL => ResourceManager.GetString("ScsShouldProcessTargetSDDL", resourceCulture);
        public static string EcsScriptMessageV => ResourceManager.GetString("EcsScriptMessageV", resourceCulture);
        public static string EcsWSManQCCaption => ResourceManager.GetString("EcsWSManQCCaption", resourceCulture);
        public static string EcsWSManQCQuery => ResourceManager.GetString("EcsWSManQCQuery", resourceCulture);
        public static string EcsWSManShouldProcessDesc => ResourceManager.GetString("EcsWSManShouldProcessDesc", resourceCulture);
        public static string EcsShouldProcessTarget => ResourceManager.GetString("EcsShouldProcessTarget", resourceCulture);
        public static string DcsScriptMessageV => ResourceManager.GetString("DcsScriptMessageV", resourceCulture);
        public static string DcsShouldProcessTarget => ResourceManager.GetString("DcsShouldProcessTarget", resourceCulture);
        public static string DcsWarningMessage => ResourceManager.GetString("DcsWarningMessage", resourceCulture);
        public static string EDcsRequiresElevation => ResourceManager.GetString("EDcsRequiresElevation", resourceCulture);
        public static string RestartWSManServiceMessageV => ResourceManager.GetString("RestartWSManServiceMessageV", resourceCulture);
        public static string RestartWSManServiceAction => ResourceManager.GetString("RestartWSManServiceAction", resourceCulture);
        public static string RestartWSManServiceTarget => ResourceManager.GetString("RestartWSManServiceTarget", resourceCulture);
        public static string RestartWSManRequiredShowUI => ResourceManager.GetString("RestartWSManRequiredShowUI", resourceCulture);
        public static string ERemotingCaption => ResourceManager.GetString("ERemotingCaption", resourceCulture);
        public static string ERemotingQuery => ResourceManager.GetString("ERemotingQuery", resourceCulture);
        public static string ShowUIAndSDDLCannotExist => ResourceManager.GetString("ShowUIAndSDDLCannotExist", resourceCulture);
        public static string RestartWinRMMessage => ResourceManager.GetString("RestartWinRMMessage", resourceCulture);
        public static string IPCUnknownNodeType => ResourceManager.GetString("IPCUnknownNodeType", resourceCulture);
        public static string IPCInsufficientDataforElement => ResourceManager.GetString("IPCInsufficientDataforElement", resourceCulture);
        public static string IPCWrongAttributeCountForDataElement => ResourceManager.GetString("IPCWrongAttributeCountForDataElement", resourceCulture);
        public static string IPCOnlyTextExpectedInDataElement => ResourceManager.GetString("IPCOnlyTextExpectedInDataElement", resourceCulture);
        public static string IPCWrongAttributeCountForElement => ResourceManager.GetString("IPCWrongAttributeCountForElement", resourceCulture);
        public static string IPCUnknownElementReceived => ResourceManager.GetString("IPCUnknownElementReceived", resourceCulture);
        public static string IPCSupportsOnlyDefaultAuth => ResourceManager.GetString("IPCSupportsOnlyDefaultAuth", resourceCulture);
        public static string IPCPwshExecutableNotFound => ResourceManager.GetString("IPCPwshExecutableNotFound", resourceCulture);
        public static string RunAs32NotSupported => ResourceManager.GetString("RunAs32NotSupported", resourceCulture);
        public static string IPCServerProcessReportedError => ResourceManager.GetString("IPCServerProcessReportedError", resourceCulture);
        public static string IPCServerProcessExited => ResourceManager.GetString("IPCServerProcessExited", resourceCulture);
        public static string IPCErrorProcessingServerData => ResourceManager.GetString("IPCErrorProcessingServerData", resourceCulture);
        public static string IPCUnknownCommandGuid => ResourceManager.GetString("IPCUnknownCommandGuid", resourceCulture);
        public static string IPCNoSignalForSession => ResourceManager.GetString("IPCNoSignalForSession", resourceCulture);
        public static string IPCSignalTimedOut => ResourceManager.GetString("IPCSignalTimedOut", resourceCulture);
        public static string IPCCloseTimedOut => ResourceManager.GetString("IPCCloseTimedOut", resourceCulture);
        public static string IPCExceptionLaunchingProcess => ResourceManager.GetString("IPCExceptionLaunchingProcess", resourceCulture);
        public static string ThrottlingJobChildAlreadyRunning => ResourceManager.GetString("ThrottlingJobChildAlreadyRunning", resourceCulture);
        public static string ThrottlingJobChildAddedAfterEndOfChildJobs => ResourceManager.GetString("ThrottlingJobChildAddedAfterEndOfChildJobs", resourceCulture);
        public static string ThrottlingJobStatusMessage => ResourceManager.GetString("ThrottlingJobStatusMessage", resourceCulture);
        public static string NestedPipelineMissingRunspace => ResourceManager.GetString("NestedPipelineMissingRunspace", resourceCulture);
        public static string JobSourceAdapterError => ResourceManager.GetString("JobSourceAdapterError", resourceCulture);
        public static string PSVersionParameterOutOfRange => ResourceManager.GetString("PSVersionParameterOutOfRange", resourceCulture);
        public static string BlockCannotBeUsedWithKeep => ResourceManager.GetString("BlockCannotBeUsedWithKeep", resourceCulture);
        public static string WriteEventsCannotBeUsedWithoutWait => ResourceManager.GetString("WriteEventsCannotBeUsedWithoutWait", resourceCulture);
        public static string PowerShellVersionNotSupported => ResourceManager.GetString("PowerShellVersionNotSupported", resourceCulture);
        public static string JobManagerRegistrationConstructorError => ResourceManager.GetString("JobManagerRegistrationConstructorError", resourceCulture);
        public static string JobSourceAdapterNotFound => ResourceManager.GetString("JobSourceAdapterNotFound", resourceCulture);
        public static string NewJobSpecificationError => ResourceManager.GetString("NewJobSpecificationError", resourceCulture);
        public static string InvalidJobStateSpecific => ResourceManager.GetString("InvalidJobStateSpecific", resourceCulture);
        public static string JobConnectFailed => ResourceManager.GetString("JobConnectFailed", resourceCulture);
        public static string RunspaceDisconnectFailed => ResourceManager.GetString("RunspaceDisconnectFailed", resourceCulture);
        public static string RunspaceConnectFailed => ResourceManager.GetString("RunspaceConnectFailed", resourceCulture);
        public static string RunspaceQueryFailed => ResourceManager.GetString("RunspaceQueryFailed", resourceCulture);
        public static string RunspaceCannotBeConnected => ResourceManager.GetString("RunspaceCannotBeConnected", resourceCulture);
        public static string RunspaceCannotBeConnectedForVMContainerSession => ResourceManager.GetString("RunspaceCannotBeConnectedForVMContainerSession", resourceCulture);
        public static string RunspaceCannotBeDisconnected => ResourceManager.GetString("RunspaceCannotBeDisconnected", resourceCulture);
        public static string RunspaceCannotBeDisconnectedForVMContainerSession => ResourceManager.GetString("RunspaceCannotBeDisconnectedForVMContainerSession", resourceCulture);
        public static string RunspaceCannotBeReceivedForVMContainerSession => ResourceManager.GetString("RunspaceCannotBeReceivedForVMContainerSession", resourceCulture);
        public static string JobActionInvalidWithNullChild => ResourceManager.GetString("JobActionInvalidWithNullChild", resourceCulture);
        public static string JobSuspendNotSupported => ResourceManager.GetString("JobSuspendNotSupported", resourceCulture);
        public static string JobResumeNotSupported => ResourceManager.GetString("JobResumeNotSupported", resourceCulture);
        public static string AsJobAndDisconnectedError => ResourceManager.GetString("AsJobAndDisconnectedError", resourceCulture);
        public static string QueryForRunspacesFailed => ResourceManager.GetString("QueryForRunspacesFailed", resourceCulture);
        public static string JobIdNotYetAssigned => ResourceManager.GetString("JobIdNotYetAssigned", resourceCulture);
        public static string JobSessionIdLessThanOne => ResourceManager.GetString("JobSessionIdLessThanOne", resourceCulture);
        public static string JobIdentifierNull => ResourceManager.GetString("JobIdentifierNull", resourceCulture);
        public static string JobBlockedSoWaitJobCannotContinue => ResourceManager.GetString("JobBlockedSoWaitJobCannotContinue", resourceCulture);
        public static string RemoveRunspaceNotConnected => ResourceManager.GetString("RemoveRunspaceNotConnected", resourceCulture);
        public static string RunspaceDisconnectFailedWithReason => ResourceManager.GetString("RunspaceDisconnectFailedWithReason", resourceCulture);
        public static string StopJobNotConnected => ResourceManager.GetString("StopJobNotConnected", resourceCulture);
        public static string SessionIdMatchFailed => ResourceManager.GetString("SessionIdMatchFailed", resourceCulture);
        public static string SessionNameMatchFailed => ResourceManager.GetString("SessionNameMatchFailed", resourceCulture);
        public static string WinPERemotingNotSupported => ResourceManager.GetString("WinPERemotingNotSupported", resourceCulture);
        public static string WinRMRequiresRestart => ResourceManager.GetString("WinRMRequiresRestart", resourceCulture);
        public static string WinRMRestartWarning => ResourceManager.GetString("WinRMRestartWarning", resourceCulture);
        public static string WinRMForceRestartWarning => ResourceManager.GetString("WinRMForceRestartWarning", resourceCulture);
        public static string JobSourceAdapterCannotSaveNullJob => ResourceManager.GetString("JobSourceAdapterCannotSaveNullJob", resourceCulture);
        public static string NoPowerShellForJob => ResourceManager.GetString("NoPowerShellForJob", resourceCulture);
        public static string NetFrameWorkV2NotInstalled => ResourceManager.GetString("NetFrameWorkV2NotInstalled", resourceCulture);
        public static string PipelineFailedWithoutReason => ResourceManager.GetString("PipelineFailedWithoutReason", resourceCulture);
        public static string PipelineFailedWithReason => ResourceManager.GetString("PipelineFailedWithReason", resourceCulture);
        public static string ResumeJobInvalidJobState => ResourceManager.GetString("ResumeJobInvalidJobState", resourceCulture);
        public static string RemoteHostNullClientHost => ResourceManager.GetString("RemoteHostNullClientHost", resourceCulture);
        public static string DisableRemotingShouldProcessTarget => ResourceManager.GetString("DisableRemotingShouldProcessTarget", resourceCulture);
        public static string SetEnabledFalseTarget => ResourceManager.GetString("SetEnabledFalseTarget", resourceCulture);
        public static string SetEnabledTrueTarget => ResourceManager.GetString("SetEnabledTrueTarget", resourceCulture);
        public static string DISCAliasDefinitionsComment => ResourceManager.GetString("DISCAliasDefinitionsComment", resourceCulture);
        public static string DISCAssembliesToLoadComment => ResourceManager.GetString("DISCAssembliesToLoadComment", resourceCulture);
        public static string DISCAuthorComment => ResourceManager.GetString("DISCAuthorComment", resourceCulture);
        public static string DISCCLRVersionComment => ResourceManager.GetString("DISCCLRVersionComment", resourceCulture);
        public static string DISCCompanyNameComment => ResourceManager.GetString("DISCCompanyNameComment", resourceCulture);
        public static string DISCCopyrightComment => ResourceManager.GetString("DISCCopyrightComment", resourceCulture);
        public static string DISCDescriptionComment => ResourceManager.GetString("DISCDescriptionComment", resourceCulture);
        public static string DISCEnvironmentVariablesComment => ResourceManager.GetString("DISCEnvironmentVariablesComment", resourceCulture);
    }
}
