//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace System.Management.Automation
{
    using System;
    using System.Reflection;
    using System.Resources;
    using System.Globalization;

        internal static class Metadata
    {
        private static ResourceManager resourceMan;
        private static CultureInfo resourceCulture;


        internal static ResourceManager ResourceManager
        {
            get
            {
                if (object.ReferenceEquals(resourceMan, null))
                {
                    resourceMan = new ResourceManager("System.Management.Automation.resources.Metadata", typeof(Metadata).GetTypeInfo().Assembly);
                }
                return resourceMan;
            }
        }

        internal static CultureInfo Culture
        {
            get { return resourceCulture; }
            set { resourceCulture = value; }
        }
            public static string MetadataMemberInitialization => nameof(MetadataMemberInitialization);
            public static string ValidateRangeElementType => nameof(ValidateRangeElementType);
            public static string ValidateRangePositiveFailure => nameof(ValidateRangePositiveFailure);
            public static string ValidateRangeNonNegativeFailure => nameof(ValidateRangeNonNegativeFailure);
            public static string ValidateRangeNegativeFailure => nameof(ValidateRangeNegativeFailure);
            public static string ValidateRangeNonPositiveFailure => nameof(ValidateRangeNonPositiveFailure);
            public static string ValidateRangeMinRangeMaxRangeType => nameof(ValidateRangeMinRangeMaxRangeType);
            public static string ValidateRangeNotIComparable => nameof(ValidateRangeNotIComparable);
            public static string ValidateRangeMaxRangeSmallerThanMinRange => nameof(ValidateRangeMaxRangeSmallerThanMinRange);
            public static string ValidateRangeGreaterThanMaxRangeFailure => nameof(ValidateRangeGreaterThanMaxRangeFailure);
            public static string ValidateRangeSmallerThanMinRangeFailure => nameof(ValidateRangeSmallerThanMinRangeFailure);
            public static string ValidatePatternFailure => nameof(ValidatePatternFailure);
            public static string ValidateCountNotInArray => nameof(ValidateCountNotInArray);
            public static string ValidateCountExactFailure => nameof(ValidateCountExactFailure);
            public static string ValidateCountMinMaxFailure => nameof(ValidateCountMinMaxFailure);
            public static string ValidateCountMaxLengthSmallerThanMinLength => nameof(ValidateCountMaxLengthSmallerThanMinLength);
            public static string ValidateLengthMaxLengthSmallerThanMinLength => nameof(ValidateLengthMaxLengthSmallerThanMinLength);
            public static string ValidateLengthNotString => nameof(ValidateLengthNotString);
            public static string ValidateLengthMinLengthFailure => nameof(ValidateLengthMinLengthFailure);
            public static string ValidateLengthMaxLengthFailure => nameof(ValidateLengthMaxLengthFailure);
            public static string ValidateSetFailure => nameof(ValidateSetFailure);
            public static string ValidateSetGeneratedValidValuesListIsNull => nameof(ValidateSetGeneratedValidValuesListIsNull);
            public static string ValidateFailureResult => nameof(ValidateFailureResult);
            public static string ParsingTooManyParameterSets => nameof(ParsingTooManyParameterSets);
            public static string ArgumentTransformationArgumentsShouldBeStrings => nameof(ArgumentTransformationArgumentsShouldBeStrings);
            public static string InvalidValueFailure => nameof(InvalidValueFailure);
            public static string InvalidMetadataForCurrentValue => nameof(InvalidMetadataForCurrentValue);
    }
}
