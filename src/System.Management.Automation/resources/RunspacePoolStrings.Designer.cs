//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace System.Management.Automation
{
    using System;
    using System.Reflection;
    using System.Resources;
    using System.Globalization;

    internal class RunspacePoolStrings
    {
        private static ResourceManager resourceMan;
        private static CultureInfo resourceCulture;

        internal RunspacePoolStrings() { }

        internal static ResourceManager ResourceManager
        {
            get
            {
                if (object.ReferenceEquals(resourceMan, null))
                {
                    resourceMan = new ResourceManager("System.Management.Automation.resources.RunspacePoolStrings", typeof(RunspacePoolStrings).GetTypeInfo().Assembly);
                }
                return resourceMan;
            }
        }

        internal static CultureInfo Culture
        {
            get { return resourceCulture; }
            set { resourceCulture = value; }
        }

        internal static string MaxPoolLessThan1 => ResourceManager.GetString("MaxPoolLessThan1", resourceCulture);
        internal static string MinPoolLessThan1 => ResourceManager.GetString("MinPoolLessThan1", resourceCulture);
        internal static string MinPoolGreaterThanMaxPool => ResourceManager.GetString("MinPoolGreaterThanMaxPool", resourceCulture);
        internal static string InvalidRunspacePoolStateGeneral => ResourceManager.GetString("InvalidRunspacePoolStateGeneral", resourceCulture);
        internal static string InvalidRunspacePoolState => ResourceManager.GetString("InvalidRunspacePoolState", resourceCulture);
        internal static string CannotOpenAgain => ResourceManager.GetString("CannotOpenAgain", resourceCulture);
        internal static string AsyncResultNotOwned => ResourceManager.GetString("AsyncResultNotOwned", resourceCulture);
        internal static string RunspaceNotBelongsToPool => ResourceManager.GetString("RunspaceNotBelongsToPool", resourceCulture);
        internal static string ChangePropertyAfterOpen => ResourceManager.GetString("ChangePropertyAfterOpen", resourceCulture);
        internal static string RunspaceDisconnectConnectNotSupported => ResourceManager.GetString("RunspaceDisconnectConnectNotSupported", resourceCulture);
        internal static string CannotWhileDisconnected => ResourceManager.GetString("CannotWhileDisconnected", resourceCulture);
        internal static string DisconnectNotSupportedOnServer => ResourceManager.GetString("DisconnectNotSupportedOnServer", resourceCulture);
        internal static string CannotReconstructCommands => ResourceManager.GetString("CannotReconstructCommands", resourceCulture);
        internal static string CannotConnect => ResourceManager.GetString("CannotConnect", resourceCulture);
        internal static string ResetRunspaceStateNotSupportedOnServer => ResourceManager.GetString("ResetRunspaceStateNotSupportedOnServer", resourceCulture);
    }
}
